"""add columns for ticket types

Revision ID: ef27446a5c57
Revises: 8cec19c09484
Create Date: 2019-04-20 17:32:54.971105

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ef27446a5c57'
down_revision = '8cec19c09484'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('events', 'address',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('events', 'image_url',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('events', 'time',
               existing_type=postgresql.TIME(),
               nullable=False)
    op.add_column('types', sa.Column('left_amount', sa.Integer(), nullable=True))
    op.add_column('types', sa.Column('price', sa.Integer(), nullable=True))
    op.add_column('types', sa.Column('total_amount', sa.Integer(), nullable=True))
    op.create_unique_constraint(op.f('uq_user_email'), 'user', ['email'])
    op.drop_constraint('user_email_key', 'user', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.drop_constraint(op.f('uq_user_email'), 'user', type_='unique')
    op.drop_column('types', 'total_amount')
    op.drop_column('types', 'price')
    op.drop_column('types', 'left_amount')
    op.alter_column('events', 'time',
               existing_type=postgresql.TIME(),
               nullable=True)
    op.alter_column('events', 'image_url',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('events', 'address',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###
